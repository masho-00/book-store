//MONGODB_URL = mongodb+srv://mashopractice00:Oumi123@cluster0.lrlorff.mongodb.net/bookstore000?retryWrites=true&w=majority&appName=Cluster0;Î©
// app.use(
  cors({
    origin: ["https://localhost:5173", "https://tcgvault.onrender.com"],
    methods: ["GET", "POST", "PUT", "DELETE"],
    credentials: true,
  })
);

// Handle preflight requests
app.options("*", cors());
// 


async function onSubmit(values: z.infer<typeof formSchema>) {

        setLoading(true);

        const {email, password} = values;

        console.log(email, password)

        const response = await fetch('https://shiftmate-backend.onrender.com/api/business/login/', {
            method: 'POST',
            body: JSON.stringify({email, password}),
            headers: {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': 'https://shiftmate-backend.onrender.com/' 
            },
            credentials: "include"
        });

        const json = await response.json();

        if (!response.ok) {
            toast({
                className: "absolute top-0 right-0",
                variant: "destructive",
                title: "Uh oh! Something went wrong.",
                description: json.error,
            });
            form.reset();
        }

        if (response.ok) {
            toast({
                className: "absolute top-0 right-0",
                variant: "success",
                title: "Successfully logged in!",
                description: json.message,
            });
            form.reset();
            router.push('/app/home');
        }

        setLoading(false);
    }

// backend
import Express from "express";
import dotenv  from "dotenv"
import cors from 'cors';
import cookieParser from 'cookie-parser';
import mongoose from "mongoose";
import businessRouter from "./routes/businessRoute";
import employeeRouter from "./routes/employeeRoute";
import weekRouter from "./routes/weekRoute";
import shiftRouter from "./routes/shiftRoute";
import profileRouter from "./routes/profileRoute";

dotenv.config();
// Express app
const app = Express();

app.use((req, res, next) => {
    res.setHeader('Access-Control-Allow-Origin', 'https://shiftmate-frontend.vercel.app');
    res.setHeader('Access-Control-Allow-Methods', '*');
    res.setHeader('Access-Control-Allow-Headers', '*');
    res.setHeader('Access-Control-Allow-Credentials', 'true');
    next();
});

// Use cookies
app.use(cookieParser());

// Allow for request body to be accessed
app.use(Express.json());

app.use((req, res, next) => {
    const accessToken = req.cookies.access_token ? '\x1b[32mTrue\x1b[0m' : '\x1b[31mFalse\x1b[0m';
    console.log(`\x1b[1m\x1b[37m[${new Date().toLocaleTimeString([], {hour12: false, hourCycle: 'h23'})}] \x1b[1m\x1b[33m[Server] [Debug]\x1b[0m - Path: ${req.path} - Method: ${req.method} - Body: ${JSON.stringify(req.body)} - Access Token: ${accessToken}`);
    next(); // this has to be called
});

// route handlers
app.use('/api/business', businessRouter);
app.use('/api/employee', employeeRouter);
app.use('/api/week', weekRouter);
app.use('/api/shift', shiftRouter);
app.use('/api/profile', profileRouter);

mongoose.connect(process.env.MONGO_URI!)
    .then(() => {
        console.log('\x1b[1m\x1b[33m[Server]\x1b[0m Connected to the database!');
        app.listen(process.env.PORT, () => {
            console.log(`\x1b[1m\x1b[33m[Server]\x1b[0m Listening on port:\x1b[1m\x1b[33m ${process.env.PORT} \x1b[0m`);
        })
    })
    .catch((error: Error) => {
        console.log(error.message);
    });
